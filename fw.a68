USE standard

mode edge = struct (int sourceVertex, destVertex, edgeWeight);
mode graph = struct (int vertices, edges, flex [1]edge edgematrix);

proc loadGraph = (string filename) graph:
begin
  file f;
  open (f, filename, stand in channel);

  graph G;
  get(f, (vertices of G, edges of G, new line));

  int srcV;
  int dstV;
  int weight;
  for i from 0 to edges of G do
    get(f, (srcV, dstV, weight, new line))
    sourceVertex of edgeMatrix[i] of G := srcV;
    destVertex of edgeMatrix[i] of G := dstV;
    edgeWeight of edgeMatrix[i] of G := weight;
  od

  close(f);
  G;

end;



proc floydWarshall = (graph g) void: begin
    [0: vertices of g, 0: vertices of g ] int processWeights, processedVertices
    int i,j,k;
 
    FOR i FROM 0 WHILE i< vertices of g DO
      FOR j FROM 0 WHILE j< vertices of g DO
        processWeights[i,j] := 65535 // hard-coding max short lol.
        processedVertices[i,j] := if i!=j then j+1 else 0 fi
      OD
    OD
      
    FOR i FROM 0 WHILE i< edges of g DO
      int x := sourceVertex of (edgeMatrix of g [i]) -1
      int y := destVertex of (edgeMatrix of g [i]) -1
      processWeights[x,y] := edgeWeight of (edgeMatrix of g [i])
    OD

    FOR i FROM 0 WHILE i< vertices of g DO
      FOR j FROM 0 WHILE j< vertices of g DO
        FOR k FROM 0 WHILE k< vertices of g DO
          if processWeights[j,i] + processWeights[i,k] < processWeights[j,k] then
            processWeights[j,k] = processWeights[j,i] + processWeights[i,k];
            processedVertices[j,k] = processedVertices[j,i];
          fi
        OD
      OD
    OD

    printf("pair    dist   path");
    FOR i FROM 0 WHILE i< vertices of g DO
      FOR j FROM 0 WHILE j< vertices of g DO
        if i!=j then
          printf()
          k := i+1
          WHILE j!=k+1  DO
            k := processedVertices[k-1,j]
            // algol68 is 1 based not 0 based - On your print inside the while loop do k-1
            printf()
          OD
        fi
      OD
    OD
    printf("\n")
}


main:(
  if argc!=2 then 
    printf()
  else
    floydWarshall(loadGraph(argv(1)));
    0
)

